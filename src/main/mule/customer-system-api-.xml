<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:snowflake="http://www.mulesoft.org/schema/mule/snowflake" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/snowflake http://www.mulesoft.org/schema/mule/snowflake/current/mule-snowflake.xsd">
    <http:listener-config name="customer-system-api--httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="customer-system-api--config" api="resource::096484fd-dcfd-4f60-9f58-aecc0e2e110f:customer-system-api:1.0.2:raml:zip:customer-system-api-.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <snowflake:snowflake-config name="Snowflake_Config" doc:name="Snowflake Config" doc:id="ce1f5b9d-8550-45d5-a2c8-5784beed3455" >
		<snowflake:snowflake-connection accountName="qx97306.ap-southeast-1" warehouse="COMPUTE_WH" database="LOAN_APPLICATION" schema="PUBLIC" user="MyCreditUnion" password="Deloitte@123" role="ACCOUNTADMIN" />
	</snowflake:snowflake-config>
	<flow name="customer-system-api--main">
        <http:listener config-ref="customer-system-api--httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="customer-system-api--config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="customer-system-api--console">
        <http:listener config-ref="customer-system-api--httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="customer-system-api--config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\loan-status\(userId):customer-system-api--config">
        <ee:transform>
            <ee:variables>
                <ee:set-variable variableName="userId">attributes.uriParams.'userId'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <snowflake:select doc:name="Select" doc:id="4d64ec2c-1612-4fc1-beec-5376667cb7dd" config-ref="Snowflake_Config" >
			<snowflake:sql ><![CDATA[select * from "LOAN_APPLICATION"."PUBLIC"."LOAN_STATUS" where USERID =:userid]]></snowflake:sql>
			<snowflake:input-parameters ><![CDATA[#[{
	userid: attributes.uriParams.userId as Number
}]]]></snowflake:input-parameters>
		</snowflake:select>
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
LOAN_ID: payload.LOAN_ID[0],
USER_ID: payload.USERID[0],
Status: payload.STATUS[0],
Reason: payload.REASON[0],
Amount: payload.AMOUNT[0]
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="post:\customer-details:application\json:customer-system-api--config">
        <snowflake:insert doc:name="Insert" doc:id="01185910-47c4-4383-b7fc-85a50ee50883" config-ref="Snowflake_Config">
			<snowflake:sql ><![CDATA[insert into "LOAN_APPLICATION"."PUBLIC"."CUSTOMER_REGISTRATION" (FIRST_NAME, LAST_NAME, DOB, PANCARD, OCCUPATION, INCOME, EMAIL, PASSWORD) values(:firstname, :lastname, :dob, :pancard, :occupation, :income, :email, :password)]]></snowflake:sql>
			<snowflake:input-parameters ><![CDATA[#[{
	firstname: payload.first_name,
	lastname: payload.last_name,
	dob: payload.DOB,
	pancard: payload.Pancard,
	occupation: payload.Occupation,
	income: payload.Income,
	email: payload.Email,
	password: payload.Password
}]]]></snowflake:input-parameters>
		</snowflake:insert>
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "Customer details updated"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="post:\loan-details:application\json:customer-system-api--config">
        <snowflake:insert doc:name="Insert" doc:id="bec54e08-b220-4e4b-a34d-4ba7db41f0bb" config-ref="Snowflake_Config">
			<snowflake:sql ><![CDATA[insert into "LOAN_APPLICATION"."PUBLIC"."LOAN_DETAIL"(USERID, EMAIL, LOAN_AMOUNT, TENURE, INTERSET, TYPE) VALUES (:userid, :email, :loan_amount, :tenure, :interest, :types)]]></snowflake:sql>
			<snowflake:input-parameters ><![CDATA[#[{
	userid: payload.USER_ID,
	email: payload.Email,
	loan_amount: payload.Loan_Amount,
	tenure: payload.Tenure,
	interest: payload.Interest,
	types: payload.Type 
}]]]></snowflake:input-parameters>
		</snowflake:insert>
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "Loan details updated"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
